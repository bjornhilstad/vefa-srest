<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>no.difi.ringo</groupId>
        <artifactId>ringo</artifactId>
        <version>1.1.28-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>ringo-server</artifactId>

    <packaging>war</packaging>

    <name>Ringo - Access point Rest Service</name>
    <description>The Ringo Server with the REST API</description>

    <profiles>
        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <isProduction>false</isProduction>
            </properties>
            <build>
                <finalName>test</finalName>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <isProduction>true</isProduction>
            </properties>
            <build>
                <finalName>ROOT</finalName>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>**/web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                    <warSourceDirectory>src/main/webapp</warSourceDirectory>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <outputDirectory/>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>
    </build>

    <dependencies>

        <!-- JSONP reference implementation API + IMPL-->

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
        </dependency>

        <!-- Local dependencies -->

        <dependency>
            <groupId>no.difi.ringo</groupId>
            <artifactId>ringo-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.difi.ringo</groupId>
            <artifactId>ringo-security</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.difi.ringo</groupId>
            <artifactId>ringo-usecase</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.difi.ringo</groupId>
            <artifactId>ringo-domain</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.difi.ringo</groupId>
            <artifactId>ringo-email-impl</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>no.difi.ringo</groupId>
            <artifactId>ringo-persistence-jdbc-impl</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- DBMS -->
        <!-- If the mysql-connector .jar is copied into the TOMCAT_HOME/lib directory -->
        <!-- the scope should be declared as "provided", otherwise the size of the .war file -->
        <!-- is increased for no good reason -->
<!--

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
             <scope>provided</scope>
        </dependency>
-->

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <!-- GUICE -->

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-assistedinject</artifactId>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
        </dependency>

        <!-- Oxalis -->

        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-commons</artifactId>
        </dependency>

        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-api</artifactId>
        </dependency>

        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-outbound</artifactId>
        </dependency>

        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-persistence-impl</artifactId>
        </dependency>


        <!-- Logging -->

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Test dependencies -->

        <dependency>
            <groupId>no.difi.ringo</groupId>
            <artifactId>ringo-client</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty.aggregate</groupId>
            <artifactId>jetty-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jsp-2.1-glassfish</artifactId>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

</project>

<?xml version="1.0" encoding="UTF-8"?>
<!-- This web.xml file is not required when using Servlet 3.0 container,
     see implementation details http://jersey.java.net/nonav/documentation/latest/jax-rs.html#d4e194 -->
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <description>REST based API for the SendRegning PEPPOL access point</description>
    <display-name>Ringo REST API server</display-name>

    <distributable/>

    <!--
     Flag which determines whether the server is running in production or not
     NB this is currently used to replace the SMP lookup, DIFI ws-elma client and
    -->
    <context-param>
        <param-name>isProductionServer</param-name>
        <param-value>${isProduction}</param-value>
    </context-param>

    <listener>
        <listener-class>no.sr.ringo.guice.RingoGuiceContextListener</listener-class>
    </listener>

    <filter>
        <filter-name>Guice Filter</filter-name>
        <filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
    </filter>

    <!-- All servlets will be handled by the Guice Filter -->
    <!-- See RingoGuiceContextListener for details -->
    <filter-mapping>
        <filter-name>Guice Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <resource-ref>
        <description>PEPPOL DataSource as configured in the &lt;Context element&gt;
            for the web application.
        </description>
        <res-ref-name>jdbc/oxalis</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <!-- no roles needed, everyone should be able to register -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>insecure-web-service</web-resource-name>
            <url-pattern>/register/*</url-pattern>
            <http-method>POST</http-method>
            <http-method>GET</http-method>
        </web-resource-collection>
        <user-data-constraint>
            <!-- Warning! this assumes that SSL/TLS is terminated in the front-end -->
            <!-- Change to CONFIDENTIAL if you are terminating SSL/TLS in the JEE web server -->
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

    <!-- only admins can access admin services -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>secure-web-service</web-resource-name>
            <url-pattern>/admin/*</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
        <user-data-constraint>
            <!-- Warning! this assumes that SSL/TLS is terminated in the front-end -->
            <!-- Change to CONFIDENTIAL if you are terminating SSL/TLS in the JEE web server -->
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

    <!-- all authenticated clients can use out other pages -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>web-service</web-resource-name>
            <url-pattern>/*</url-pattern>
            <http-method>HEAD</http-method>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
            <http-method>PUT</http-method>
            <http-method>DELETE</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>client</role-name>
        </auth-constraint>
        <user-data-constraint>
            <!-- Warning! this assumes that SSL/TLS is terminated in the front-end -->
            <!-- Change to CONFIDENTIAL if you are terminating SSL/TLS in the JEE web server -->
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

    <!-- Define the Login Configuration for this Application -->
    <login-config>
        <!-- Warning! This is sufficient security ONLY if you are using https -->
        <auth-method>BASIC</auth-method>
        <!-- Note! The realm-name is used as part of the input to generate hashed passwords if auth-method is set to DIGEST -->
        <realm-name>PEPPOL AP</realm-name>
    </login-config>

    <security-role>
        <role-name>client</role-name>
        <description>
            The role required to access the restricted content defined above in the security-constraint
        </description>
    </security-role>
    <security-role>
        <description>
            Role required to access admin resource
        </description>
        <role-name>admin</role-name>
    </security-role>

    <error-page>
        <error-code>401</error-code>
        <location>/WEB-INF/pages/custom-status-code/401.jsp</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/WEB-INF/pages/custom-status-code/403.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/pages/custom-status-code/404.jsp</location>
    </error-page>

</web-app>